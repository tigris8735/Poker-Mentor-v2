#!/usr/bin/env python3
"""
Poker Mentor Bot - –ó–∞–ø—É—Å–∫–Ω–æ–π —Ñ–∞–π–ª
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É app –≤ –ø—É—Ç—å Python
sys.path.append(os.path.join(os.path.dirname(__file__), 'app'))

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("üéÆ Poker Mentor Bot - –ó–∞–ø—É—Å–∫...")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
        required_files = ['config.txt', 'app/bot.py', 'app/config.py']
        for file in required_files:
            if not os.path.exists(file):
                print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: {file}")
                return
        
        print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç
        from app.bot import PokerMentorBot
        print("‚úÖ –ú–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        bot = PokerMentorBot()
        print("‚úÖ –ë–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        print("=" * 50)
        
        bot.run()
        
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

# –í run.py –î–û–ë–ê–í–ò–¢–¨ —Ç–µ—Å—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é:

def test_user_stories():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∏–∑ User Stories"""
    print("\n" + "="*50)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï USER STORIES")
    print("="*50)
    
    test_cases = [
        {
            "name": "US-001: –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞",
            "steps": ["/start", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"],
            "expected": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –º–µ–Ω—é"
        },
        {
            "name": "US-003: –ë—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞", 
            "steps": ["üéÆ –ë—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã"],
            "expected": "–ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
        },
        {
            "name": "US-005: –ò–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å",
            "steps": ["–°–¥–µ–ª–∞—Ç—å —Ö–æ–¥", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç AI", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–µ–∫–∞"],
            "expected": "–ò–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        }
    ]
    
    for test in test_cases:
        print(f"‚úÖ {test['name']}")
        print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è: {test['expected']}")
    
    print(f"\nüéØ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ: {len(test_cases)} —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")

if __name__ == "__main__":
    main()
    test_user_stories()
